using System;
using System.Diagnostics;
using System.Numerics;
using System.Text.RegularExpressions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Q = nilnul.num._quotient.Dividing;

namespace nilnul.num._quotient_._TEST_.ask_.fracs.verify.big
{
	[TestClass]
	public class UnitTest1113
	{
		[TestMethod]
		public void TestMethod1()
		{
			string clean(string s) {
				return Regex.Replace(s, " |\r|\n|\t|_", "");
				//return s.Replace(" ", "").Replace("\r", "").Replace("\n", "").Replace("_","").Replace("\t","");
			}

			BigInteger a = BigInteger.Parse(
				clean(
				@"

1054210182683112310528012408530531909717229064191793536540847847817849001214642792626066010344383473173101972948978951703027097154519698536728956323881063669558925110120619283730835864056709609662983759100063333396875182094245046315497525532634764115913236450532733839386139526489824351




"
				)
			);

			BigInteger b = BigInteger.Parse(
				clean(
				@"
					
1440354387400113353318275132419054375891245413681864837390427511212805748408072838847944629793120889446685643108530381465382074956451566809039119353657601240377236701038904980199109550001860607309184336719930229935342817546146083848277758428344831968440238907935894338978800768226766379



				"
				)
			);

			BigInteger c = BigInteger.Parse(
				clean(
				@"
					
9391500403903773267688655787670246245493629218171544262747638036518222364768797479813561509116827252710188014736501391120827705790025300419608858224262849244058466770043809014864245428958116544162335497194996709759345801074510016208346248254582570123358164225821298549533282498545808644

				"
				)
			);

			//var gcd = BigInteger.GreatestCommonDivisor()
			Debug.Assert(
				new Q(a, b + c)
					+
				new Q(b, c + a)
					+
				new Q(c, a + b) == 4
			);
		}
	}
}